import random
from torch.utils.data import Dataset
import numpy as np


class DatasetBalancer:
    def __init__(self, dataset, ratio):
        self.dataset = dataset
        self.ratio = ratio

        self._splitDataset()

    def _splitDataset(self):
        samples = range(len(self.dataset))
        test_samples = random.sample(samples,
                                     int(self.ratio*len(self.dataset)))
        train_samples = np.setdiff1d(samples, test_samples).tolist()

        self.train_dataset = BalancedDataset(self.dataset, train_samples)
        self.test_dataset = BalancedDataset(self.dataset, test_samples)

    def getTrainDataset(self):
        return self.train_dataset

    def getTestDataset(self):
        return self.test_dataset


class BalancedDataset(Dataset):
    def __init__(self, dataset, samples):
        self.samples = samples
        self.dataset = dataset

    def __len__(self):
        return len(self.samples)

    def __getitem__(self, idx):
        return self.dataset[self.samples[idx]]
